{"version":3,"sources":["components/Table.js","App.js","index.js"],"names":["Table","columns","data","useState","filterInput","setFilterInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","value","onChange","e","target","undefined","placeholder","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps","App","setData","useEffect","a","axios","result","results","useMemo","Header","accessor","Cell","src","alt","street","number","name","city","state","postcode","country","bDate","Date","date","year","getFullYear","month","getMonth","day","getDate","ReactDOM","document","getElementById"],"mappings":"+RAIe,SAASA,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAAQ,EAEPC,mBAAS,IAFF,mBAEtCC,EAFsC,KAEzBC,EAFyB,OAiBzCC,mBACA,CACIL,UACAC,QAEJK,aACAC,aAZAC,EAXyC,EAWzCA,cACAC,EAZyC,EAYzCA,kBACAC,EAbyC,EAazCA,aACAC,EAdyC,EAczCA,KACAC,EAfyC,EAezCA,WACAC,EAhByC,EAgBzCA,UAUJ,OACI,qCACI,uBACIC,MAAOX,EACPY,SA1Be,SAAAC,GACvB,IAAMF,EAAQE,EAAEC,OAAOH,YAASI,EAChCL,EAAU,YAAaC,GACvBV,EAAeU,IAwBPK,YAAa,wBAGjB,gDAAOC,UAAU,oCAAuCZ,KAAxD,cACI,gCACKE,EAAaW,KAAI,SAAAC,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3B,8CACQA,EAAOC,eAAeD,EAAOE,yBADrC,IAEIP,UACIK,EAAOG,SACDH,EAAOI,aACH,YACA,WACJ,GAPd,SAUKJ,EAAOK,OAAO,wBAKnC,iDAAWrB,KAAX,aACKE,EAAKU,KAAI,SAACU,EAAKC,GAEZ,OADApB,EAAWmB,GAEP,8CAAQA,EAAIE,eAAZ,aACKF,EAAIG,MAAMb,KAAI,SAAAc,GACX,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKL,OAAO,8B,2BC4BtEO,MAvFf,WAAgB,IAAD,EACWnC,mBAAS,IADpB,mBACND,EADM,KACAqC,EADA,KAGbC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEACsBC,IAAM,yCAD5B,OACOC,EADP,OAGCJ,EAAQI,EAAOzC,KAAK0C,SAHrB,0CAAD,KAOC,IAEH,IAAM3C,EAAU4C,mBACd,iBAAM,CACJ,CACEC,OAAQ,iDACR7C,QAAS,CACP,CACE6C,OAAQ,QACRC,SAAU,oBACVC,KAAM,YAA0B,IAAfjC,EAAc,EAAtBqB,KAAQrB,MACf,OACE,qBAAKkC,IAAKlC,EAAOmC,IAAI,gBAI3B,CACEJ,OAAQ,aACRC,SAAU,cAEZ,CACED,OAAQ,YACRC,SAAU,aAEZ,CACED,OAAQ,UACRC,SAAU,SAEZ,CACED,OAAQ,UACRC,SAAU,WACVC,KAAM,YAA0B,IAAfjC,EAAc,EAAtBqB,KAAQrB,MAEf,OACE,6CACMA,EAAMoC,OAAOC,OADnB,YAC6BrC,EAAMoC,OAAOE,KAD1C,aACmDtC,EAAMuC,KADzD,aACkEvC,EAAMwC,MADxE,YACiFxC,EAAMyC,SADvF,aACoGzC,EAAM0C,aAKhH,CACEX,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,WACRC,SAAU,MACVC,KAAM,YAA0B,IAAfjC,EAAc,EAAtBqB,KAAQrB,MACX2C,EAAQ,IAAIC,KAAK5C,EAAM6C,MACvBC,EAAOH,EAAMI,cACbC,EAASL,EAAMM,WAAc,EAC7BC,EAAOP,EAAMQ,UACjB,OACE,6CAAMH,EAAN,YAAeE,EAAf,YAAsBJ,OAI5B,CACEf,OAAQ,MACRC,SAAU,gBAIf,IAKL,OACE,sBAAK1B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAOpB,QAASA,EAASC,KAAMA,QClFrCiE,IAASpC,OAAO,cAAC,EAAD,IAASqC,SAASC,eAAe,W","file":"static/js/main.b343e043.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFilters, useSortBy, useTable } from \"react-table\";\r\nimport \"./Table.css\";\r\n\r\nexport default function Table({ columns, data }) {\r\n\r\n    const [filterInput, setFilterInput] = useState(\"\");\r\n\r\n    const handleFilterChange = e => {\r\n        const value = e.target.value || undefined;\r\n        setFilter(\"name.last\", value);\r\n        setFilterInput(value);\r\n    };\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        setFilter\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data\r\n        },\r\n        useFilters,\r\n        useSortBy\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={filterInput}\r\n                onChange={handleFilterChange}\r\n                placeholder={\"Search by last name\"}\r\n            />\r\n\r\n            <table className=\"table table-bordered table-hover\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    className={\r\n                                        column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? \"sort-desc\"\r\n                                                : \"sort-asc\"\r\n                                            : \"\"\r\n                                    }\r\n                                >\r\n                                    {column.render(\"Header\")}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}","import React, { useMemo, useState, useEffect } from \"react\"\nimport Table from \"./components/Table\";\nimport './App.css';\nimport axios from \"axios\"\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const result = await axios(\"https://randomuser.me/api/?results=25\");\n      // console.log(result.data.results)\n      setData(result.data.results)\n\n\n    })();\n  }, []);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Employee Directory (click column head to sort)\",\n        columns: [\n          {\n            Header: \"Photo\",\n            accessor: \"picture.thumbnail\",\n            Cell: ({ cell: { value } }) => {\n              return (\n                <img src={value} alt=\"head shot\" />\n              );\n            }\n          },\n          {\n            Header: \"First Name\",\n            accessor: \"name.first\"\n          },\n          {\n            Header: \"Last Name\",\n            accessor: \"name.last\"\n          },\n          {\n            Header: \"Phone #\",\n            accessor: \"phone\"\n          },\n          {\n            Header: \"Address\",\n            accessor: \"location\",\n            Cell: ({ cell: { value } }) => {\n              // console.log(value)\n              return (\n                <>\n                  {`${value.street.number} ${value.street.name}\\n${value.city}, ${value.state} ${value.postcode}\\n${value.country}`}\n                </>\n              )\n            }\n          },\n          {\n            Header: \"email\",\n            accessor: \"email\"\n          },\n          {\n            Header: \"birthday\",\n            accessor: \"dob\",\n            Cell: ({ cell: { value } }) => {\n              let bDate = new Date(value.date);\n              let year = bDate.getFullYear();\n              let month = (bDate.getMonth()) + 1;\n              let day = (bDate.getDate())\n              return (\n                <>{`${month}/${day}/${year}`}</>\n              )\n            }\n          },\n          {\n            Header: \"Age\",\n            accessor: \"dob.age\"\n          }\n        ]\n      }\n    ], []\n  )\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>EMPLOYEE DIRECTORY</h1>\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}